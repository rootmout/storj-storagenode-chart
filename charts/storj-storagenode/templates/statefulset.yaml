apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "storj-storagenode.fullname" . }}
  labels:
    {{- include "storj-storagenode.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "storj-storagenode.fullname" . }}
  selector:
    matchLabels:
      {{- include "storj-storagenode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "storj-storagenode.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "storj-storagenode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.storagenode }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- end }}
          ports:
            - name: storagenode
              containerPort: 28967
              protocol: TCP
            {{- if .Values.service.stats.enabled }}
            - name: stats
              containerPort:  14002
              protocol: TCP
            {{- end }}
            {{- if .Values.service.quic.enabled }}
            - name: quic
              containerPort: 28967
              protocol: UDP
            {{- end }}
          command:
            - bash
            - "-c"
            - |
              set -e
              if [ ! -f /app/config/config.yaml ]; then
                echo "Node not initialized, start in setup mode..."
                export SETUP=true
              else
                echo "Node already initialized, start in run mode..."
                export SETUP=false
              fi
              /entrypoint --operator.wallet-features=zksync-era,zksync
          livenessProbe:
            tcpSocket:
              port: storagenode
          readinessProbe:
            tcpSocket:
              port: storagenode
          envFrom:
            - configMapRef:
                name: {{ include "storj-storagenode.fullname" . }}
          resources:
            {{- toYaml .Values.storagenode.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "storj-storagenode.fullname" . }}
              mountPath: /app/config
            - name: storj-identity
              mountPath: /app/identity
        {{- if .Values.metrics.enabled }}
        {{- with .Values.metrics }}
        - name: storj-exporter
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - name: storj-exporter
              containerPort: 9651
              protocol: TCP
          env:
            - name: STORJ_HOST_ADDRESS
              value: "127.0.0.1"
          livenessProbe:
            timeoutSeconds: 2
            httpGet:
              path: /metrics
              port: storj-exporter
          readinessProbe:
            timeoutSeconds: 2
            httpGet:
              path: /metrics
              port: storj-exporter
          resources:
            {{- toYaml .resources | nindent 12 }}
        {{- end }}
        {{- end }}
      volumes:
        - name: storj-identity
          secret:
            secretName: {{ if .Values.identity.vaultSecret }}{{ include "storj-storagenode.fullname" . }}{{- else -}}{{ required "External secret identity" .Values.identity.externalSecret.secretName }}{{- end}}
        {{- if not .Values.persistence.enabled }}
        - name: {{ include "storj-storagenode.fullname" . }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "storj-storagenode.fullname" . }}
    {{- with .Values.persistence  }}
      annotations:
{{ toYaml .annotations | indent 8 }}
    spec:
{{ toYaml .volumeClaimTemplate | indent 6 }}
    {{- end }}
  {{- end }}
